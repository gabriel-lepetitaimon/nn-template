experiment:
    name: "Run Name"
    project: "WandB Project Name"

    group:     # WandB run group (optional)
    job-type:  # WandB run job-type (optional)
    tags:      # WandB run tags (optional)
    dir:       # WandB run artefact directory (optional)
    notes:     # WandB run notes and comments (optional)
    entity:    # WandB entity where the run should be registered (optional)


###########################################################
#         ---   HYPER-PARAMETER SEARCH   ---              #
###########################################################
optuna:
    study_name: 'test'
    sampler:
        type: TPE
        n_startup_trials: 10
    pruner:
        type: Hyperband
        
        

###########################################################
#                    ---   TASK   ---                    #
###########################################################
task:
    type: Segmentation2D
    metrics: kappa, acc, sen, spe, iou, roc
    objective: val-kappa
    direction: max
    n-classes: binary

    loss: cross-entropy #(eval?)

    optimizer:
        type: Adam
        #weight_decay: 0
        #beta: 0.9       # coefficients used for computing running averages of gradient
        #beta_sqr: 0.999 # and its square
        #amsgrad: True

        lr: ~optuna.float(1e-5,1e-2)


###########################################################
#                    ---   MODEL   ---                    #
###########################################################
model:
    type: 'smp'
    architecture: 'Unet'
    encoder_name: 'resnet34'
    encoder_weights: 'imagenet'
    # See https://smp.readthedocs.io/en/latest/models.html


###########################################################
#                   ---   TRAINING   ---                  #
###########################################################
training:
    minibatch: 8
    max-epoch: 30
    seed: 1234
    
    loss: cross-entropy #(eval?)


###########################################################
#                   ---   DATASETS   ---                  #
###########################################################
datasets:
    fields:
        images:
            x: raw
        labels:
            y: gt > 1
            mask: gt > 0

    train:
        source: DRIVE-train-val
        range: ':-3'
            
        augment:
            augmentation: default
            factor: 2

    validate:
        source: DRIVE-train-val
        range: '-3:'
        cache: True

    test:
        "DRIVE":
            source: 'DRIVE-test'
            cache: True

    sources:
        DRIVE-train-val:
              dir-prefix: '/home/gaby/These/Data/Fundus/Vessels/DRIVE/train/'

              data:
                  raw:
                    type: ColorMap
                    directory: '0-images'
                    path: '{ID:n}_training.png'
                    # resize: 1500
                  gt:
                    type: LabelMap
                    directory: '2-label_AV'
                    labelize:
                        1: r + g > 125
                        2: b > 125
                    $: ..raw

        DRIVE-test:
              $: ..DRIVE-train-val
              dir-prefix: '/home/gaby/These/Data/Fundus/Vessels/DRIVE/test/'
              data:
                  raw.path: '{ID:n}_test.tif'
                  gt.path: '{ID:n}_test.png'

###########################################################
#              ---   DATA-AUGMENTATIONS   ---             #
###########################################################
data-augmentation:
    default:
        flip: True
        rotation: True
        elastic:
            alpha: 40
            sigma: 20
            alpha-affine: 50
        random-crop: 512

        gamma: ±.2
        hue: ±10
        saturation: ±.1


###########################################################
#                     ---   MISC   ---                    #
###########################################################
hardware:
    debug: False
    # Select which gpus to use.
    # If you want a specific gpu put ',' after the gpu number.
    gpus: 1,
    precision: 16     # Training precision. ['64', '32', 'bf16', '16']
    cudnn-benchmark: False
    num-worker: 0
    minibatch-splits: 2

